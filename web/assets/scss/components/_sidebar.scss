// Sidebar

.sidebar {
  @include global-padding;
  display: none;
  h2 {
    margin-top: 0;
    position: relative;
    a {
      display: block;
      text-decoration: none;
    }
    &.current a,
    a:hover,
    a:focus {
      color: $red;
    }
  }
  .current {
    // Hover Arrow
    &::after {
      right: 0;
      // opacity: 0;
      top: 2*$beat;
      content: '';
      width: 11.1px;
      height: 15.7px;
      position: absolute;
      background: url('../svgs/icon-right-arrow-red.svg') no-repeat;
      background-size: contain;
    }
  }

  @include media-lg {
    display: block;
    left: 0;
    bottom: 0;
    position: fixed;
    top: $header-height-lg;
    width: $sidebar-max-width;
  }

  // Filters
  .filters {
    max-height: 100%;
    overflow-y: auto;
    @include font-copyright;

    li {
      &:first-of-type {
        margin-top: 0;
      }
      position: relative;

      // .active = active categories in single entry view (e.g. single project's markets)
      // .current = current page (with arrow)
      &.active,
      &.current {
        a {
          color: $red;
        }
      }
    }

    a {
      display: block;
      text-decoration: none;
      padding: 1*$beat 2*$beat 1*$beat 0;
      &:hover,
      &:focus {
        color: $red;
      }
    }
  }
}

// Sticky sidebar behaviors on desktop screens
@include media-lg {

  // Make sticky wrapper sidebar width and floated left so it doesn't affect main layout
  .sidebar-sticky-wrapper {
    width: $sidebar-max-width;
    float: left;
  }
  // Stick that sidebar
  .sidebar {
    max-height: calc(100vh - #{$header-height-lg});
    &.stuck {
      top: 0;
      position: fixed;
    }
  }
  // If body has scrolled down and nav isn't stuck, make max-height of sidebar to full viewport height
  body.-scrolled:not(.nav-stuck) {
    .sidebar {
      max-height: calc(100vh);
    }
  }
  // Push down stuck sidebar if main nav is also stuck
  body.nav-stuck {
    .sidebar {
      &.stuck {
        top: $header-height-lg;
      }
    }
  }
}