@mixin hr-top($color) {
  position: relative;

  &::before {
    top: 0;
    z-index: 1;
    content: '';
    height: 1px;
    left: $padding;
    right: $padding;
    position: absolute;
    background: $color;
  }
}

@mixin hr-bottom($color) {
  position: relative;

  &::after {
    bottom: 0;
    z-index: 1;
    content: '';
    height: 1px;
    left: $padding;
    right: $padding;
    position: absolute;
    background: $color;
  }
}

@each $color-key, $color in $colors {
  .hr-top-#{$color-key} {
    @include hr-top($color);
  }

  .hr-bottom-#{$color-key} {
    @include hr-bottom($color);
  }
}

.row.-separators {
  &.-halves {
    .row-block {
      position: relative;

      &::after {
        bottom: 0;
        height: 1px;
        content: '';
        left: $padding;
        right: $padding;
        position: absolute;
        background: $off-white;
      }

      &:last-of-type {
        &::after {
          display: none;
        }
      }

      @include media-md {
        &:nth-of-type(odd){
          &::after {
            right: 0;
            left: auto;
            width: 1px;
            height: auto;
            top: $padding;
            bottom: $padding;
          }
        }

        &:nth-of-type(even){
          &::after {
            left: calc(-100% + #{$padding})
          }
        }
      }
    }
  }
  &.-quarters {
    .row-block {
      position: relative;

      &::after {
        bottom: 0;
        height: 1px;
        content: '';
        left: $padding;
        right: $padding;
        position: absolute;
        background: $off-white;
      }

      @include screen($breakpoint-quarters-2col, $breakpoint-quarters-4col - 1px) {
        &:nth-of-type(odd){
          &::after {
            right: 0;
            left: auto;
            width: 1px;
            height: auto;
            top: $padding;
            bottom: $padding;
          }
        }

        &:nth-of-type(even){
          &::after {
            left: calc(-100% + #{$padding})
          }
        }

        &:last-of-type {
          &::after {
            display: none;
          }
        }
      }

      @include min-screen($breakpoint-quarters-4col) {
        &:not(:nth-of-type(4n)){
          &::after {
            right: 0;
            left: auto;
            width: 1px;
            height: auto;
            top: $padding;
            bottom: $padding;
          }
        }

        &:nth-of-type(4n){
          &::after {
            left: calc(-300% + #{$padding})
          }
        }

        &:last-of-type {
          &::after {
            display: none;
          }
        }
      }
    }
  }
}


.photo-row-separators {
  overflow: hidden; // hide the final separator on each row

  .row-block {

    .module { // All the flexbox here is for when the .separate's within a row have different heights, we still want a uniform separator height
      display: flex;
      flex-direction: column;
    }

    .text {
      flex-grow: 1;
      position: relative;

      &::after {
        right: -1px;
        width: 1px;
        content: '';
        top: $padding;
        bottom: $padding;
        position: absolute;
        background: $off-white;
      }
    }

    &:last-of-type {
      .text::after {
        display: none
      }
    }
  }
}


.meta-item {
  position: relative;

  &::after, &::before {
    content: '';
    position: absolute;
    background: $off-white;
  }

  @include max-screen($breakpoint-meta - 1px) {
    &::before {
      top: 0;
      height: 1px;
      left: $padding;
      right: $padding;
    }

    &:first-child {
      &::before { display: none; }
    }
  }
  @include min-screen($breakpoint-meta) {

    &.-half {
      &::before {
        top: 0;
        height: 1px;
        left: $padding;
        right: calc(-100% + #{$padding});
      }

      &:first-child {
        &::before { display: none; }
      }
      &.-row-end {
        &::before { display: none; }
        &::after {
          left: 0;
          top: 32px;
          width: 1px;
          bottom: $padding;
        }
      }
    }

     &.-full {

      &::before {
        top: 0;
        height: 1px;
        left: $padding;
        right: $padding;
      }

      &:first-child {
        &::before { display: none; }
      }
    }
  }
}