// 1 Number Stat
.stat-module {
  overflow: hidden;
  background-color: $white;
  padding: 1.5*$padding-sm $padding-sm;

  @include media-md {
    display: flex;
    align-items: center;
    padding: 1.5*$padding-md $padding-md;
  }

  @include media-lg {
    padding: 1.5*$padding-lg $padding-lg;
  }

  .stat-one-figure-wrap {
    position: relative;
    width: 100%;
    display: flex;
    flex-wrap: no-wrap;
    justify-content: space-between;
    .slash,
    .label,
    .figure {
      flex-grow: 1;
      flex-basis: content;
    }
    .figure {
      max-width: 90%;
    }

    .slash {
      position: relative;
      flex-grow: 2;
      padding: 0 3*$beat;
      &::after {
        position: absolute;
        right: 50%;
        width: 2px;
        content: '';
        top: .1em;
        bottom: .1em;
        position: absolute;
        transform: skew(-18deg);
        background-color: $concrete-light;

        @include media-lg {
          top: $beat;
          bottom: $beat;
        }
      }
    }
  }

  .label {
    @include font-details;
    margin: $beat 0;
    max-width: 200px;
    text-align: right;
    align-self: flex-end;

    @include media-md {
      max-width: 18*$beat;
      &.-wrapped {
        text-align: left;
      }
    }
  }
}

// 2 Number Stat
.stat-two-figure-module {
  height: 100%;
  overflow: hidden;
  background: $white;
  position: relative;
  @include global-padding;

  .slash-wrap {
    height: 100%;
    display: flex;
    position: relative;
    justify-content: space-between;

    &::after {
      top: 0;
      bottom: 0;
      right: 50%;
      width: 2px;
      content: '';
      position: absolute;
      transform: skew(-18deg);
      background-color: $concrete-light;
    }
  }

  @include media-md {
    min-height: 320px;
  }

  .figure {
    margin: 0;
    max-width: 33.33%;
    flex-basis: 33.33%;
  }

  .fit-figure-container {
    @include media-md {
      width: 130%;
    }
  }

  .figure-2 .fit-figure-container {
    @include media-md {
      position: relative;
      left: -30%;
    }
  }

  .label {
    @include font-details;
    display: block;
    margin: $beat 0 0;
  }

  .figure-2 {
    text-align: right;
    align-self: flex-end;
  }
}

.stat-module,
.stat-two-figure-module {

  .percent {
    top: -1.3em;
    line-height: 1;
    font-size: .33em;
    position: relative;
    margin-left: 0.2ch;
  }

  .fit-figure-container {
    // JS will take .fit-figure (child) and test 1-10em based on this 11px
    // It will take biggest that fits.
    @include formular-medium;
    @include paragraph-style (11, 11, $ls: -.025em);
  }

  .fit-figure {
    &[data-figure-size="1"],
    &[data-figure-size="2"],
    &[data-figure-size="3"],
    &[data-figure-size="4"],
    &[data-figure-size="5"] {
      @include formular-bold;
    }
  }
}

// Aspect ratio height
.masonry-item,
.row .row-block {
  .module {
    &.stat-module, &.stat-two-figure-module {
      min-height: initial;

      @include media-md {
        height: calc( (100vw - #{$padding})/2*(2/3) );
      }

      @include media-lg {
        height: calc( 100vw/3*(2/3) );
      }

      @include media-xl {
        height: calc( (100vw - #{$sidebar-max-width})/2*(2/3) );
      }
    }
  }
}

// Image / Video
.image-module, .video-module {
  @include clearfix;
  @include max-screen($breakpoint-md - 1px) {
    margin-top: $padding;
  }

  .caption {
    background: $white;
    position: relative;
    padding: 55px $padding $padding;

    @include media-lg {
      padding: 55px $padding-lg $padding-lg;
    }

    .icon {
      top: 38px;
      width: 7px;
      height: 10px;
      fill: $black;
      left: $padding;
      position: absolute;

      @include media-lg {
        left: $padding-lg;
      }
    }
  }

  &.-full .caption {
    @include media-md {
      display: inline-block;
      width: 50%;
      margin-top: -6*$beat;

      &.-right {
        float: right;
      }
    }
  }
}

// Video
.video-module {
  .caption {
    transition: transform 0.3s $ease;
  }
  &.theater-wrap.-open {
    .caption {
      @include media-md {
        transform: translateY(#{6*$beat});
      }
    }
  }
}

// Text
.text-module {
  @include global-padding;

  .buttons {
    @include clearfix;
    margin-top: $padding;

    @include media-lg {
      margin-top: $padding-lg;
    }

    .button {
      float: left;
      margin-right: 2*$beat;
      margin-bottom: 2*$beat;

      &:last-child {
        margin-right: 0;
      }
    }
  }
}

// Quote Carousel
// Blockquotes currently use a negative-margin with compensatory padding to create hanging quotes.  In the carousel that will effect sizing, so we remove the negative margin and instead adjust the module padding
.quotes-module {
  padding: $padding $padding $padding #{$padding - 10px};
  overflow: hidden;

  // Show overhanging quotes on slick carousel
  .slick-list {
    overflow: visible;
  }

  @include media-lg {
    padding: $padding-lg $padding-lg $padding-lg #{$padding-lg - 9px};
  }

  blockquote {
    margin-top: 0;
    margin-bottom: 0;
  }
}

// Remove padding on quotes-module inside text-module (e.g. quote at top of office entry)
.text-module .quotes-module {
  padding: 0;
}

.quote-carousel {
  position: relative;
  padding-bottom: $padding*2;

  .next, .prev {
      bottom: 0;
      left: 10px;
      cursor: pointer;
      position: absolute;

      @include media-md {
        left: 9px;
      }

      .icon {
        width: 20px;
        height: 15px;
        fill: $black;
        transition: transform 0.1s $ease;
      }
  }

  .prev {
    &:hover {
      .icon { transform: translateX(-5px); }
    }
  }

  .next {
    margin-left: $padding*2;

    @include media-md {
      margin-left: $padding;
    }

    &:hover {
      .icon { transform: translateX(5px); }
    }
  }

  &.-unslicked {
    blockquote {
      display: none;
      &:first-child {
        display: block;
      }
    }
  }
}

// Link Grid
.row.-spaced {
  .link-grid-module {
    .row-block {
      margin: 0;
    }
  }
}

.link-grid-module {
  .row-block {

    @include min-screen($breakpoint-thirds-2col) {
      min-height: calc((100vw - #{$padding})/2);
    }

    @include min-screen($breakpoint-thirds-3col) {
      min-height: calc((100vw - #{$padding})/3);
    }

    @include media-lg {
      min-height: calc(66.66vw / 3);
    }
  }

  .link-module {
    min-height: 100%;
    position: relative;
    padding: $padding $padding ($padding+66px);

    @include media-lg {
      padding: $padding-lg $padding-lg ($padding-lg+66px);
    }

    .category {
      color: $red;
    }
    .title {
      margin: 5px 0;
    }
    .excerpt {
      margin: 4.5*$beat 0 5.5*$beat;
    }
    .button {
      position: absolute;
      bottom: $padding;

      @include media-lg {
        bottom: $padding-lg;
      }
    }
  }
}

